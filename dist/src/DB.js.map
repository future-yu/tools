{"version":3,"sources":["../../src/DB.js"],"names":["mysql","require","DB","config","pool","createPool","sql","Promise","resolve","reject","getConnection","err","connection","query","error","results","fields","release","tableName","keys","values","_formatInsertMany","_this","then","res","catch","value","_formatSQLValue","join","valuesArr","map","item","Date","toLocaleString","port","host","user","password","database","timezone","db"],"mappings":";;;;;;AAAA,IAAIA,QAAQC,QAAQ,OAAR,CAAZ;AACA;;;;IAGMC,E;AACF,gBAAYC,MAAZ,EAAmB;AAAA;;AACf,aAAKC,IAAL,GAAYJ,MAAMK,UAAN,CAAiBF,MAAjB,CAAZ;AACH;;AAGD;;;;;;;;;8BAKMG,G,EAAI;AACN,gBAAIF,OAAO,KAAKA,IAAhB;AACA,mBAAO,IAAIG,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAkB;AACjCL,qBAAKM,aAAL,CAAmB,UAASC,GAAT,EAAcC,UAAd,EAA0B;AACzC,wBAAID,GAAJ,EAAS,MAAMA,GAAN;AACTC,+BAAWC,KAAX,CAAiBP,GAAjB,EAAsB,UAAUQ,KAAV,EAAiBC,OAAjB,EAA0BC,MAA1B,EAAkC;AACpDJ,mCAAWK,OAAX;AACA,4BAAIH,KAAJ,EAAW,MAAMA,KAAN;AACXN,gCAAQO,OAAR;AACH,qBAJD;AAKH,iBAPD;AAQH,aATM,CAAP;AAUH;;AAED;;;;;;;;;;mCAOWG,S,EAAUC,I,EAAKC,M,EAAO;AAC7B,gBAAId,MAAM,KAAKe,iBAAL,CAAuBH,SAAvB,EAAiCC,IAAjC,EAAsCC,MAAtC,CAAV;AACA,gBAAIE,QAAQ,IAAZ;AACA,mBAAO,IAAIf,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAkB;AAClCa,sBAAMT,KAAN,CAAYP,GAAZ,EAAiBiB,IAAjB,CAAsB,UAACC,GAAD,EAAO;AACzBhB,4BAAQgB,GAAR;AACH,iBAFD,EAEGC,KAFH,CAES,UAACd,GAAD,EAAO;AACZF,2BAAOE,GAAP;AACH,iBAJD;AAKF,aANM,CAAP;AAQH;;AAED;;;;;;;;;;+BAOOO,S,EAAUF,M,EAAOU,K,EAAM;AAC1B,gBAAIJ,QAAO,IAAX;AACA,mBAAO,IAAIf,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAkB;AACjCiB,wBAAQJ,MAAMK,eAAN,CAAsBD,KAAtB,CAAR;AACA,oBAAIpB,uBAAqBY,SAArB,SAAkCF,OAAOY,IAAP,CAAY,GAAZ,CAAlC,kBAA+DF,MAAME,IAAN,CAAW,GAAX,CAA/D,MAAJ;AACAN,sBAAMT,KAAN,CAAYP,GAAZ;AACH,aAJM,CAAP;AAKH;AACD;;;;;;;;;;0CAOkBY,S,EAAUC,I,EAAKC,M,EAAO;AAAA;;AACpC,gBAAIS,YAAYT,OAAOU,GAAP,CAAW,UAACC,IAAD,EAAQ;AAC/BA,uBAAO,OAAKJ,eAAL,CAAqBI,IAArB,CAAP;AACA,+CACOA,KAAKH,IAAL,CAAU,GAAV,CADP;AAGH,aALe,CAAhB;AAMA,gBAAItB,mDAEEY,SAFF,SAEeC,KAAKS,IAAL,CAAU,GAAV,CAFf,4CAIEC,UAAUD,IAAV,CAAe,GAAf,CAJF,sBAAJ;AAMA,mBAAOtB,GAAP;AACH;;AAED;;;;;;;;wCAKgBc,M,EAAO;AACnB,mBAAOA,OAAOU,GAAP,CAAW,UAACJ,KAAD,EAAS;AACvB,oBAAG,OAAOA,KAAP,KAAiB,QAApB,EAA6B;AACzB,kCAAWA,KAAX;AACH;AACD,oBAAGA,iBAAiBM,IAApB,EAAyB;AACrB,kCAAWN,MAAMO,cAAN,EAAX;AACH;AACD,uBAAOP,KAAP;AACH,aARM,CAAP;AASH;;;;;;AAGL,IAAIvB,SAAS;AACT+B,UAAK,IADI;AAETC,UAAK,WAFI;AAGTC,UAAK,MAHI;AAITC,cAAS,QAJA;AAKTC,cAAS,eALA;AAMTC,cAAU;AAND,CAAb;;AASA,IAAIC,KAAK,IAAItC,EAAJ,CAAOC,MAAP,CAAT","file":"DB.js","sourcesContent":["var mysql = require('mysql');\r\n/**\r\n * 封装常用数据库操作\r\n */\r\nclass DB {\r\n    constructor(config){\r\n        this.pool = mysql.createPool(config);\r\n    }\r\n\r\n\r\n    /**\r\n     * 通用查询\r\n     * @param sql\r\n     * @returns {Promise<any>}\r\n     */\r\n    query(sql){\r\n        let pool = this.pool;\r\n        return new Promise((resolve,reject)=>{\r\n            pool.getConnection(function(err, connection) {\r\n                if (err) throw err;\r\n                connection.query(sql, function (error, results, fields) {\r\n                    connection.release();\r\n                    if (error) throw error;\r\n                    resolve(results);\r\n                });\r\n            });\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 插入多个值\r\n     * @param tableName 表名\r\n     * @param keys      要插入的字段\r\n     * @param values    字段值[[]]\r\n     * @returns {Promise<any>}\r\n     */\r\n    insertMany(tableName,keys,values){\r\n        let sql = this._formatInsertMany(tableName,keys,values);\r\n        let _this = this;\r\n        return new Promise((resolve,reject)=>{\r\n           _this.query(sql).then((res)=>{\r\n               resolve(res);\r\n           }).catch((err)=>{\r\n               reject(err);\r\n           });\r\n        });\r\n\r\n    }\r\n\r\n    /**\r\n     * 插入一个值\r\n     * @param tableName\r\n     * @param fields\r\n     * @param value\r\n     * @returns {Promise<any>}\r\n     */\r\n    insert(tableName,fields,value){\r\n        let _this =this;\r\n        return new Promise((resolve,reject)=>{\r\n            value = _this._formatSQLValue(value);\r\n            let sql = `INSERT INTO ${tableName}(${fields.join(',')}) VALUES (${value.join(',')})`;\r\n            _this.query(sql)\r\n        })\r\n    }\r\n    /**\r\n     *\r\n     * @param tableName 表名\r\n     * @param keys      要插入的字段\r\n     * @param values    字段值[[]]\r\n     * @private\r\n     */\r\n    _formatInsertMany(tableName,keys,values){\r\n        let valuesArr = values.map((item)=>{\r\n            item = this._formatSQLValue(item);\r\n            return `\r\n                (${item.join(',')})\r\n            `;\r\n        });\r\n        let sql = `\r\n            INSERT INTO \r\n            ${tableName}(${keys.join(',')})\r\n            VALUES \r\n            ${valuesArr.join(',')}       \r\n        `;\r\n        return sql;\r\n    }\r\n\r\n    /**\r\n     * 格式化需要插入或更新的数据的格式\r\n     * @param values\r\n     * @private\r\n     */\r\n    _formatSQLValue(values){\r\n        return values.map((value)=>{\r\n            if(typeof value === 'string'){\r\n                return `'${value}'`;\r\n            }\r\n            if(value instanceof Date){\r\n                return `'${value.toLocaleString()}'`;\r\n            }\r\n            return value;\r\n        });\r\n    }\r\n}\r\n\r\nlet config = {\r\n    port:3306,\r\n    host:'localhost',\r\n    user:'root',\r\n    password:'123456',\r\n    database:'circle_review',\r\n    timezone: '+08:00'\r\n};\r\n\r\nlet db = new DB(config);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]}